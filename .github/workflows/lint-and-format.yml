name: Lint and Format

on:
  push:
    branches: [main, staging]
  pull_request:
    branches: [main, staging]

permissions:
  contents: read

jobs:
  lint-and-format:
    name: Lint and Prettier
    runs-on: ubuntu-latest
    env:
      CI: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: npm

      - name: Install dependencies
        run: npm ci

      - id: lint
        name: Run ESLint
        run: npm run lint

      - name: Annotate ESLint failure
        if: failure() && steps.lint.outcome == 'failure'
        shell: bash
        run: |
          echo "::error title=ESLint found issues::Run 'npm run lint:fix' locally to auto-fix where possible, then commit and push."
          echo "ESLint failed. Suggested fix: npm run lint:fix" >> $GITHUB_STEP_SUMMARY

      - id: format_check
        name: Run Prettier check
        run: npm run format:check

      - name: Annotate Prettier failure
        if: failure() && steps.format_check.outcome == 'failure'
        shell: bash
        run: |
          echo "::error title=Prettier check failed::Run 'npm run format' to apply formatting changes, then commit and push."
          echo "Prettier failed. Suggested fix: npm run format" >> $GITHUB_STEP_SUMMARY

      - name: Lint/Format Summary
        if: always()
        shell: bash
        run: |
          {
            echo "## Lint and Format Results";
            echo "";
            echo "- ESLint: ${{ steps.lint.outcome }}";
            echo "- Prettier: ${{ steps.format_check.outcome }}";
            echo "";
            if [ "${{ steps.lint.outcome }}" != "success" ]; then
              echo "> Suggested fix: npm run lint:fix";
            fi
            if [ "${{ steps.format_check.outcome }}" != "success" ]; then
              echo "> Suggested fix: npm run format";
            fi
          } >> $GITHUB_STEP_SUMMARY
